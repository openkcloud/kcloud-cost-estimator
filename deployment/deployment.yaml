apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcloud-cost-estimator
  namespace: kcloud-system
  labels:
    app: kcloud-cost-estimator
    app.kubernetes.io/name: kcloud-cost-estimator
    app.kubernetes.io/component: collector
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kcloud-cost-estimator
  template:
    metadata:
      labels:
        app: kcloud-cost-estimator
        app.kubernetes.io/name: kcloud-cost-estimator
        app.kubernetes.io/component: collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: kcloud-cost-estimator
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: collector
        image: kcloud-cost-estimator:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8001
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        envFrom:
        - configMapRef:
            name: kcloud-cost-estimator-config
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
